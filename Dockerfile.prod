###########
# BUILDER #
###########

# pull official base image
FROM python:3.8-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# 환경 변수 설정
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# 필수 빌드 패키지 설치
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-dev \
    build-essential \
    rustc \
    cargo \
    libffi-dev \
    linux-headers \
    libjpeg-dev \
    zlib1g-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# pip 업그레이드 및 빌드 도구 설치
RUN python3 -m pip install --upgrade pip setuptools wheel maturin

# Python 의존성 설치
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


###########
# FINAL #
###########

# pull official base image
FROM python:3.8-slim-buster

# 작업 디렉토리 설정
WORKDIR /usr/src/app

# 런타임 의존성 설치
RUN apt-get update && apt-get install -y --no-install-recommends \
    libffi7 \
    libmariadb3 \
    tzdata \
    libjpeg62-turbo-dev \
    zlib1g \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# pip 업그레이드
RUN python3 -m pip install --upgrade pip

# Python 의존성 설치
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache-dir /wheels/*

# 타임존 설정
RUN ln -snf /usr/share/zoneinfo/Asia/Seoul /etc/localtime && echo "Asia/Seoul" > /etc/timezone
ENV TZ=Asia/Seoul

# 프로젝트 파일 복사
COPY . /usr/src/app/
COPY ./config/docker/entrypoint.prod.sh /usr/src/app/

# 애플리케이션 실행 사용자 설정
RUN addgroup --system app && adduser --system --ingroup app app
RUN chown -R app:app /usr/src/app/

# 사용자 전환
USER app
