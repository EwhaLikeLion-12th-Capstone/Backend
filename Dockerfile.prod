# BUILDER # 
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies and Rust
RUN apk update && apk add --no-cache \
    python3 \
    python3-dev \
    mariadb-dev \
    build-base \
    rust \
    cargo \
    libffi-dev \
    linux-headers \
    && pip3 install mysqlclient

# dependencies for pillow
RUN apk add --no-cache jpeg-dev zlib-dev

# pip 업그레이드
RUN python3 -m pip install --upgrade pip

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add --no-cache \
    libffi \
    libpq \
    tzdata \
    jpeg-dev \
    zlib-dev \
    mariadb-dev

# pip 업그레이드
RUN python3 -m pip install --upgrade pip

# copy built wheels and install dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install mysqlclient
RUN pip install --no-cache /wheels/*

# 타임존 설정
RUN ln -snf /usr/share/zoneinfo/Asia/Seoul /etc/localtime && echo "Asia/Seoul" > /etc/timezone
ENV TZ=Asia/Seoul

# copy entrypoint-prod.sh
COPY ./config/docker/entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# clean up build dependencies
RUN apk del build-base rust cargo linux-headers

# change to the app user
USER app
